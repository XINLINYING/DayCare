/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SwingUI;

//import com.sun.org.apache.xalan.internal.lib.ExsltDatetime;
import edu.neu.csye6200.CSVdata;
import edu.neu.csye6200.DaycareSingleton;
import edu.neu.csye6200.Student;
import edu.neu.csye6200.Teacher;
import java.awt.EventQueue;
import java.awt.event.*;
import javax.swing.*;

/**
 *
 * @author JiayingXie
 */
public class MyLoginGUI extends javax.swing.JFrame {
    private enum UserType{TEACHER, STUDENT, MANAGER, NONE}
    private UserType currentUserIdentity = UserType.NONE;

//    // this helper method could be called in other class, but will use thread
//	public static void initializeLoginView() {
//		EventQueue.invokeLater(new Runnable() {
//			public void run() {
//				try {
//					MyLoginGUI window = new MyLoginGUI();
//                                        window.setVisible(true);
//				} catch (Exception e) {
//					e.printStackTrace();
//				}
//			}
//		});
//	}

    // constructor
    public MyLoginGUI() {
        initComponents();
        // width and height of the frame
        setSize(800, 500);
        // display centered
        setLocationRelativeTo(null);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelDaycare = new javax.swing.JLabel();
        jLabelUserId = new javax.swing.JLabel();
        jLabelPassward = new javax.swing.JLabel();
        jTextFieldUserId = new javax.swing.JTextField();
        jPasswordField = new javax.swing.JPasswordField();
        jButtonLogin = new javax.swing.JButton();
        jComboBoxUserIdentity = new javax.swing.JComboBox<>();
        jLabelUserIndetity = new javax.swing.JLabel();
        jButtonBackToPreviousPage = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Log in");

        jLabelDaycare.setText("DayCare");

        jLabelUserId.setText("UserId");

        jLabelPassward.setText("Passward");

        jTextFieldUserId.setColumns(15);

        jPasswordField.setColumns(15);

        jButtonLogin.setText("Log in");
        jButtonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoginActionPerformed(evt);
            }
        });

        jComboBoxUserIdentity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose user identity", "Manager", "Teacher", "Student" }));
        jComboBoxUserIdentity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxUserIdentityItemStateChanged(evt);
            }
        });

        jLabelUserIndetity.setText("User Identity");

        jButtonBackToPreviousPage.setText("Back");
        jButtonBackToPreviousPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackToPreviousPageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonBackToPreviousPage)
                        .addGap(25, 25, 25)
                        .addComponent(jLabelDaycare, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jButtonLogin))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelUserId)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldUserId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelPassward)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabelUserIndetity)
                                .addGap(49, 49, 49)
                                .addComponent(jComboBoxUserIdentity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(408, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDaycare, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBackToPreviousPage))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelUserId)
                    .addComponent(jTextFieldUserId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPassward)
                    .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabelUserIndetity))
                    .addComponent(jComboBoxUserIdentity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButtonLogin)
                .addContainerGap())
        );

        setBounds(0, 0, 800, 500);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxUserIdentityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxUserIdentityItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String chooseUserIndetity = (String) jComboBoxUserIdentity.getSelectedItem();
            if (chooseUserIndetity.equals("Teacher")) {
                this.currentUserIdentity = UserType.TEACHER;
            } else if (chooseUserIndetity.equals("Student")) {
                this.currentUserIdentity = UserType.STUDENT;
            } else if (chooseUserIndetity.equals("Manager")) {
                this.currentUserIdentity = UserType.MANAGER;
            }
        }
    }//GEN-LAST:event_jComboBoxUserIdentityItemStateChanged

    private void jButtonBackToPreviousPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackToPreviousPageActionPerformed
        // TODO add your handling code here:
        WelcomeUI welcomePage = new WelcomeUI();
        this.setVisible(false);

    }//GEN-LAST:event_jButtonBackToPreviousPageActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MyLoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MyLoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MyLoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MyLoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new MyLoginGUI().setVisible(true);
//            }
//        });
//    }

    // caution, the return value of JPasswordField.getPassword() is char[], rather than String
    private boolean IsLogin(String userId, char[] passward){
        if (this.currentUserIdentity == UserType.STUDENT) {
            for (Student student : CSVdata.readStudentData()) {
                if (String.valueOf(student.getStuId()).equals(userId)) {
                    if (student.getPwd().equals(String.valueOf(passward))) {
                        DaycareSingleton.getInstance().setCurrentUserData(student);
                        DaycareSingleton.getInstance().userType = DaycareSingleton.UserType.STUDENT;
                        DaycareSingleton.getInstance().setUserID(Integer.valueOf(jTextFieldUserId.getText()));
                        return true;
                    } else {
                        return false;
                    }
                }
            }
        }
        if (this.currentUserIdentity == UserType.TEACHER) {
        	System.out.println("usertype" + this.currentUserIdentity);
        	
            for (Teacher teacher : CSVdata.readTeacherData()) {
                if (String.valueOf(teacher.getTeacherId()).equals(userId)) {
                	System.out.println(teacher.getPwd());
                	System.out.println(String.valueOf(passward)));
                    if (teacher.getPwd().equals(String.valueOf(passward))) {
                        DaycareSingleton.getInstance().setCurrentUserData(teacher);
                        DaycareSingleton.getInstance().userType = DaycareSingleton.UserType.TEACHER;
                        DaycareSingleton.getInstance().setUserID(Integer.valueOf(jTextFieldUserId.getText()));
                        return true;
                    } else {
                        return false;
                    }
                }
            }
        }
        if (this.currentUserIdentity == UserType.MANAGER){
            if (userId.equals("6200") && ("6200").equals(String.valueOf(passward))) {                
                return true;
            } else{
                return false;
            }            
        }        
        return false;
    }

    private void jButtonLoginActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if (this.currentUserIdentity == UserType.NONE) {
            Object[] options = { "OK" };
            JOptionPane.showOptionDialog(null, "Click OK to continue", "Warning: Please choose user identity.",
                    JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
        }else{
            if ((this.currentUserIdentity == UserType.TEACHER &&
                    Integer.parseInt(jTextFieldUserId.getText()) >= 10000) ||
                    (this.currentUserIdentity == UserType.STUDENT &&
                            Integer.parseInt(jTextFieldUserId.getText()) < 10000) ||
                    (this.currentUserIdentity == UserType.MANAGER && !(jTextFieldUserId.getText().equals("6200")))) {
                Object[] options = { "OK" };
                JOptionPane.showOptionDialog(null, "Click OK to continue", "Warning: Error user identity.",
                        JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
            }else {
                boolean isLogin = IsLogin(jTextFieldUserId.getText(), jPasswordField.getPassword());
                if (isLogin) {
                    if (this.currentUserIdentity == UserType.MANAGER) {
//                        ManagerUI.initializeLoginView();
                        new ManagerUI().setVisible(true);
                    } else {
                         ClassroomUI homepage = new ClassroomUI();                         
                    }
                    this.setVisible(false);
                } else {
//					login fail
                    Object[] options = { "OK" };
                    JOptionPane.showOptionDialog(null, "Click OK to continue", "Warning: UserId or password check failed.",
                            JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBackToPreviousPage;
    private javax.swing.JButton jButtonLogin;
    private javax.swing.JComboBox<String> jComboBoxUserIdentity;
    private javax.swing.JLabel jLabelDaycare;
    private javax.swing.JLabel jLabelPassward;
    private javax.swing.JLabel jLabelUserId;
    private javax.swing.JLabel jLabelUserIndetity;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JTextField jTextFieldUserId;
    // End of variables declaration//GEN-END:variables
}
